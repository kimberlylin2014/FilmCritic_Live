{"version":3,"sources":["redux/movie/movie.actions.js","redux/user/user.actions.js","redux/movie/movie.types.js","redux/movie/movie.selectors.js","redux/user/user.selectors.js","components/errorBoundary/errorBoundary.component.jsx","App.js","redux/user/user.reducer.js","redux/movie/movie.reducer.js","redux/rootReducer.js","redux/user/user.api.js","redux/user/users.sagas.js","redux/movie/movie.api.js","redux/movie/movie.sagas.js","redux/rootSaga.js","redux/store.js","serviceWorker.js","components/scrollToTop/scrollToTop.component.jsx","index.js","redux/user/user.types.js"],"names":["resetMovieSearch","type","movieActionTypes","RESET_MOVIESEARCH","getMovieSearchStart","searchWords","GET_MOVIESEARCH_START","payload","getMovieSearchSuccess","results","GET_MOVIESEARCH_SUCCESS","getMovieSearchFailure","error","GET_MOVIESEARCH_FAILURE","getPrivateMovieSearchStart","GET_PRIVATE_MOVIES_SEARCH_START","getPrivateMovieSearchSuccess","GET_PRIVATE_MOVIES_SEARCH_SUCCESS","getPrivateMovieSearchFailure","GET_PRIVATE_MOVIES_SEARCH_FAILURE","getPrivateMovieSearchFailureSession","GET_PRIVATE_MOVIES_SEARCH_FAILURE_SESSION","submitMovieReviewStart","review","SUBMIT_MOVIEREVIEW_START","submitMovieReviewSuccess","movieResult","SUBMIT_MOVIEREVIEW_SUCCESS","submitMovieReviewFailure","SUBMIT_MOVIEREVIEW_FAILURE","submitMovieReviewFailureSession","SUBMIT_MOVIEREVIEW_FAILURE_SESSION","getReviewsByMovieIDStart","movieID","GET_REVIEWSBYMOVIEID_START","getReviewsByMovieIDSuccess","reviews","GET_REVIEWSBYMOVIEID_SUCCESS","getReviewsByMovieIDFailure","GET_REVIEWSBYMOVIEID_FAILURE","getReviewsByMovieIDFailureSession","GET_REVIEWSBYMOVIEID_FAILURE_SESSION","getFavoriteMovieReviewsStart","GET_FAVORITEMOVIEREVIEW_START","getFavoriteMovieReviewsSuccess","data","GET_FAVORITEMOVIEREVIEW_SUCCESS","getFavoriteMovieReviewsFailure","GET_FAVORITEMOVIEREVIEW_FAILURE","updateReviewStart","updatedReview","UPDATE_REVIEW_START","updateReviewSuccess","finalReview","UPDATE_REVIEW_SUCCESS","updateReviewFailure","UPDATE_REVIEW_FAILURE","updateReviewFailureSession","UPDATE_REVIEW_FAILURE_SESSION","deleteReviewStart","reviewObj","DELETE_REVIEW_START","deleteReviewSuccess","resp","DELETE_REVIEW_SUCCESS","deleteReviewFailure","DELETE_REVIEW_FAILURE","deleteReviewFailureSession","DELETE_REVIEW_FAILURE_SESSION","resetUser","userActionTypes","RESET_USER","registerUserStart","credentials","REGISTER_USER_START","registerUserSuccess","user","REGISTER_USER_SUCCESS","registerUserFailure","REGISTER_USER_FAILURE","loginUserStart","LOGIN_USER_START","loginUserSuccess","LOGIN_USER_SUCCESS","loginUserFailure","LOGIN_USER_FAILURE","logoutUserStart","LOGOUT_USER_START","logoutUserSuccess","LOGOUT_USER_SUCCESS","logoutUserFailure","LOGOUT_USER_FAILURE","movieSelector","state","movies","selectMovieList","createSelector","movieList","selectIsMovieListLoading","isLoading","selectMovieErrorMessage","top3isLoading","errorMessage","selectSingleMoviePage","singleMoviePage","selectSessionExpireWarning","sessionExpireWarning","selectTopBanner","top3","userSelector","selectCurrentUser","currentUser","selectIsUserLoading","selectUserErrorMessage","ErrorBoundary","props","hasError","this","className","style","height","src","alt","width","marginRight","children","React","Component","NotFoundPage","lazy","Register","PrivateHome","PublicHome","SingleMoviePage","Login","Header","Footer","SessionExpireModal","App","fallback","exact","path","process","render","to","component","mapStateToProps","createStructuredSelector","connect","INITIAL_STATE","userReducer","action","movieReducer","persistConfig","key","storage","whitelist","rootReducer","combineReducers","persistReducer","registerUserAPI","a","fetch","method","headers","body","JSON","stringify","status","json","console","debug","loginUserAPI","logoutUserAPI","token","registerUser","onRegisterUserSuccess","onRegisterUserStart","loginUser","onLoginUserStart","logOutUser","onLogOutUserStart","userSagas","Error","put","message","takeLatest","userDataAfterLogin","userData","accessToken","window","sessionStorage","setItem","getItem","removeItem","all","call","getMoviesPublicAPI","getReviewsByMovieIDPublic","statusText","getMoviesPrivateAPI","searchObj","movieSearch","submitMovieReview","reviewBody","score","userID","imdbID","id","newData","getReviewsByMovieID","updateReviewsByReviewID","fanscore","reviewID","deleteReviewByReviewID","getReviews","onGetReviewsByMovieIDStart","getFavoriteMovieReviews","onGetFavoriteMovieReviewStart","onSubmitReviewSuccess","submitReview","onSubmitMovieReviewStart","fetchMoviesPrivate","onGetPrivateMovieSearchStart","fetchMoviesPublic","onGetPublicMovieSearchStart","updateReview","onUpdateReviewStart","onDeleteReviewSuccess","deleteReview","onDeleteReviewStart","movieSagas","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","logger","store","createStore","applyMiddleware","run","persistor","persistStore","Boolean","location","hostname","match","ScrollToTop","prevProps","pathname","scrollTo","withRouter","ReactDOM","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b540921a.chunk.js","sourcesContent":["import movieActionTypes from './movie.types';\n\nexport const resetMovieSearch = () => {\n    return {\n        type: movieActionTypes.RESET_MOVIESEARCH,\n    }\n}\n\n// Get Movie Search for PUBLIC ROUTE\nexport const getMovieSearchStart = (searchWords) => {\n    return {\n        type: movieActionTypes.GET_MOVIESEARCH_START,\n        payload: searchWords\n    }\n}\n\nexport const getMovieSearchSuccess = (results) => {\n    return {\n        type: movieActionTypes.GET_MOVIESEARCH_SUCCESS,\n        payload: results\n    }\n}\n\nexport const getMovieSearchFailure = (error) => {\n    return {\n        type: movieActionTypes.GET_MOVIESEARCH_FAILURE,\n        payload: error\n    }\n}\n\n// Get Movie Search for PRIVATE ROUTE\nexport const getPrivateMovieSearchStart = (searchWords) => {\n    return {\n        type: movieActionTypes.GET_PRIVATE_MOVIES_SEARCH_START,\n        payload: searchWords\n    }\n}\n\nexport const getPrivateMovieSearchSuccess = (results) => {\n    return {\n        type: movieActionTypes.GET_PRIVATE_MOVIES_SEARCH_SUCCESS,\n        payload: results\n    }\n}\n\nexport const getPrivateMovieSearchFailure = (error) => {\n    return {\n        type: movieActionTypes.GET_PRIVATE_MOVIES_SEARCH_FAILURE,\n        payload: error\n    }\n}\n\nexport const getPrivateMovieSearchFailureSession = (error) => {\n    return {\n        type: movieActionTypes.GET_PRIVATE_MOVIES_SEARCH_FAILURE_SESSION,\n        payload: error\n    }\n}\n\n// Post Movie Review\nexport const submitMovieReviewStart = (review) => {\n    return {\n        type: movieActionTypes.SUBMIT_MOVIEREVIEW_START,\n        payload: review\n    }\n}\n\nexport const submitMovieReviewSuccess = (movieResult) => {\n    return {\n        type: movieActionTypes.SUBMIT_MOVIEREVIEW_SUCCESS,\n        payload: movieResult\n    }\n}\n\nexport const submitMovieReviewFailure = (error) => {\n    return {\n        type: movieActionTypes.SUBMIT_MOVIEREVIEW_FAILURE,\n        payload: error\n    }\n}\n\nexport const submitMovieReviewFailureSession = (error) => {\n    return {\n        type: movieActionTypes.SUBMIT_MOVIEREVIEW_FAILURE_SESSION,\n        payload: error\n    }\n}\n\n// GET MOVIE REVIWS BY MOVIE ID\nexport const getReviewsByMovieIDStart = (movieID) => {\n    return {\n        type: movieActionTypes.GET_REVIEWSBYMOVIEID_START,\n        payload: movieID\n    }\n}\n\nexport const getReviewsByMovieIDSuccess = (reviews) => {\n    return {\n        type: movieActionTypes.GET_REVIEWSBYMOVIEID_SUCCESS,\n        payload: reviews\n    }\n}\n\nexport const getReviewsByMovieIDFailure = (error) => {\n    return {\n        type: movieActionTypes.GET_REVIEWSBYMOVIEID_FAILURE,\n        payload: error\n    }\n}\n\nexport const getReviewsByMovieIDFailureSession = (error) => {\n    return {\n        type: movieActionTypes.GET_REVIEWSBYMOVIEID_FAILURE_SESSION,\n        payload: error\n    }\n}\n// GET FAVORITE MOVIE REVIEWS BY MOVIE ID\nexport const getFavoriteMovieReviewsStart = () => {\n    return {\n        type: movieActionTypes.GET_FAVORITEMOVIEREVIEW_START,\n    }\n}\n\nexport const getFavoriteMovieReviewsSuccess = (data) => {\n    return {\n        type: movieActionTypes.GET_FAVORITEMOVIEREVIEW_SUCCESS,\n        payload: data\n    }\n}\n\nexport const getFavoriteMovieReviewsFailure = (error) => {\n    return {\n        type: movieActionTypes.GET_FAVORITEMOVIEREVIEW_FAILURE,\n        payload: error\n    }\n}\n\n// export const getFavoriteMovieReviewsFailureSession = (error) => {\n//     return {\n//         type: movieActionTypes.GET_FAVORITEMOVIEREVIEW_FAILURE_SESSION,\n//         payload: error\n//     }\n// }\n\n// UPDATE REVIEW\nexport const updateReviewStart = (updatedReview) => {\n    return {\n        type: movieActionTypes.UPDATE_REVIEW_START,\n        payload: updatedReview\n    }\n}\n\nexport const updateReviewSuccess = (finalReview) => {\n    return {\n        type: movieActionTypes.UPDATE_REVIEW_SUCCESS,\n        payload: finalReview\n    }\n}\n\nexport const updateReviewFailure = (error) => {\n    return {\n        type: movieActionTypes.UPDATE_REVIEW_FAILURE,\n        payload: error\n    }\n}\n\nexport const updateReviewFailureSession = (error) => {\n    return {\n        type: movieActionTypes.UPDATE_REVIEW_FAILURE_SESSION,\n        payload: error\n    }\n}\n\n// DELETE REVIEW\nexport const deleteReviewStart = (reviewObj) => {\n    return {\n        type: movieActionTypes.DELETE_REVIEW_START,\n        payload: reviewObj\n    }\n}\n\nexport const deleteReviewSuccess = (resp) => {\n    return {\n        type: movieActionTypes.DELETE_REVIEW_SUCCESS,\n        payload: resp\n    }\n}\n\nexport const deleteReviewFailure = (error) => {\n    return {\n        type: movieActionTypes.DELETE_REVIEW_FAILURE,\n        payload: error\n    }\n}\n\nexport const deleteReviewFailureSession = (error) => {\n    return {\n        type: movieActionTypes.DELETE_REVIEW_FAILURE_SESSION,\n        payload: error\n    }\n}","import userActionTypes from './user.types';\n\nexport const resetUser = () => {\n    return {\n        type: userActionTypes.RESET_USER\n    }\n}\n\nexport const registerUserStart = (credentials) => {\n    return {\n        type: userActionTypes.REGISTER_USER_START,\n        payload: credentials\n    }\n}\n\nexport const registerUserSuccess = (user) => {\n    return {\n        type: userActionTypes.REGISTER_USER_SUCCESS,\n        payload: user\n    }\n}\n\nexport const registerUserFailure = (error) => {\n    return {\n        type: userActionTypes.REGISTER_USER_FAILURE,\n        payload: error\n    }\n}\n\nexport const loginUserStart = (credentials) => {\n    return {\n        type: userActionTypes.LOGIN_USER_START,\n        payload: credentials\n    }\n}\n\nexport const loginUserSuccess = (user) => {\n    return {\n        type: userActionTypes.LOGIN_USER_SUCCESS,\n        payload: user\n    }\n}\n\nexport const loginUserFailure = (error) => {\n    return {\n        type: userActionTypes.LOGIN_USER_FAILURE,\n        payload: error\n    }\n}\n\nexport const logoutUserStart = () => {\n    return {\n        type: userActionTypes.LOGOUT_USER_START,\n    }\n}\n\nexport const logoutUserSuccess = () => {\n    return {\n        type: userActionTypes.LOGOUT_USER_SUCCESS,\n    }\n}\n\nexport const logoutUserFailure = (error) => {\n    return {\n        type: userActionTypes.LOGOUT_USER_FAILURE,\n        payload: error\n    }\n}","const movieActionTypes = {\n    RESET_MOVIESEARCH: 'RESET_MOVIESEARCH',\n    GET_MOVIESEARCH_START: 'GET_MOVIESEARCH_START',\n    GET_MOVIESEARCH_SUCCESS: 'GET_MOVIESEARCH_SUCCESS',\n    GET_MOVIESEARCH_FAILURE: 'GET_MOVIESEARCH_FAILURE',\n\n    GET_PRIVATE_MOVIES_SEARCH_START: 'GET_PRIVATE_MOVIES_SEARCH_START',\n    GET_PRIVATE_MOVIES_SEARCH_SUCCESS: 'GET_PRIVATE_MOVIES_SEARCH_SUCCESS',\n    GET_PRIVATE_MOVIES_SEARCH_FAILURE: 'GET_PRIVATE_MOVIES_SEARCH_FAILURE',\n    GET_PRIVATE_MOVIES_SEARCH_FAILURE_SESSION: 'GET_PRIVATE_MOVIES_SEARCH_FAILURE_SESSION',\n\n    SUBMIT_MOVIEREVIEW_START: 'SUBMIT_MOVIEREVIEW_START',\n    SUBMIT_MOVIEREVIEW_SUCCESS: 'SUBMIT_MOVIEREVIEW_SUCCESS',\n    SUBMIT_MOVIEREVIEW_FAILURE: 'SUBMIT_MOVIEREVIEW_FAILURE',\n    SUBMIT_MOVIEREVIEW_FAILURE_SESSION: 'SUBMIT_MOVIEREVIEW_FAILURE_SESSION',\n\n    GET_REVIEWSBYMOVIEID_START: 'GET_REVIEWSBYMOVIEID_START',\n    GET_REVIEWSBYMOVIEID_SUCCESS: 'GET_REVIEWSBYMOVIEID_SUCCESS',\n    GET_REVIEWSBYMOVIEID_FAILURE: 'GET_REVIEWSBYMOVIEID_FAILURE',\n    GET_REVIEWSBYMOVIEID_FAILURE_SESSION: 'GET_REVIEWSBYMOVIEID_FAILURE_SESSION',\n\n    UPDATE_REVIEW_START: 'UPDATE_REVIEW_START',\n    UPDATE_REVIEW_SUCCESS: ' UPDATE_REVIEW_SUCCESS',\n    UPDATE_REVIEW_FAILURE: 'UPDATE_REVIEW_FAILURE',\n    UPDATE_REVIEW_FAILURE_SESSION: 'UPDATE_REVIEW_FAILURE_SESSION',\n\n    DELETE_REVIEW_START: 'DELETE_REVIEW_START',\n    DELETE_REVIEW_SUCCESS: 'DELETE_REVIEW_SUCCESS',\n    DELETE_REVIEW_FAILURE: 'DELETE_REVIEW_FAILURE',\n    DELETE_REVIEW_FAILURE_SESSION: 'DELETE_REVIEW_FAILURE_SESSION',\n\n    GET_FAVORITEMOVIEREVIEW_START: 'GET_FAVORITEMOVIEREVIEW_START',\n    GET_FAVORITEMOVIEREVIEW_SUCCESS: 'GET_FAVORITEMOVIEREVIEW_SUCCESS',\n    GET_FAVORITEMOVIEREVIEW_FAILURE: 'GET_FAVORITEMOVIEREVIEW_FAILURE'\n    // GET_FAVORITEMOVIEREVIEW_FAILURE_SESSION: 'GET_FAVORITEMOVIEREVIEW_FAILURE_SESSION'\n}\n\nexport default movieActionTypes;\n","import { createSelector } from 'reselect';\n\nconst movieSelector = (state) => state.movies;\n\nexport const selectMovieList = createSelector(\n    [movieSelector],\n    (movies) => movies.movieList\n)\n\nexport const selectIsMovieListLoading = createSelector(\n    [movieSelector],\n    (movies) => movies.isLoading\n)\n\nexport const selectIsTop3MovieListLoading = createSelector(\n    [movieSelector],\n    (movies) => movies.top3isLoading\n)\n\nexport const selectMovieErrorMessage = createSelector(\n    [movieSelector],\n    (movies) => movies.errorMessage\n)\n\nexport const selectSingleMoviePage = createSelector(\n    [movieSelector],\n    (movies) => movies.singleMoviePage\n)\n\nexport const selectSessionExpireWarning = createSelector(\n    [movieSelector],\n    (movies) => movies.sessionExpireWarning\n)\n\nexport const selectTopBanner = createSelector(\n    [movieSelector],\n    (movies) => {\n       return movies.top3\n    }\n)","import {createSelector } from 'reselect';\n\nconst userSelector = (state) => state.user;\n\nexport const selectCurrentUser = createSelector(\n    [userSelector],\n    (user) => user.currentUser\n)\n\nexport const selectIsUserLoading = createSelector(\n    [userSelector],\n    (user) => user.isLoading\n)\n\nexport const selectUserErrorMessage= createSelector(\n    [userSelector],\n    (user) => user.errorMessage\n)\n","import React from 'react';\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { hasError: false };\n    }\n  \n    static getDerivedStateFromError(error) {\n      // Update state so the next render will show the fallback UI.\n      return { hasError: true };\n    }\n  \n    render() {\n      if (this.state.hasError) {\n        // You can render any custom fallback UI\n        return (\n          <div className='row justify-content-center align-items-center' style={{height: \"95vh\"}}>\n            <div className='col-lg-8 d-flex justify-content-center align-items-center'>\n              <img src=\"https://www.flaticon.com/svg/static/icons/svg/929/929416.svg\" alt=\"error\" width='70px' \n              style={{marginRight: \"20px\"}}\n              />\n              <h1 className='text-center'>There was an issue with the network. Please refresh the page.</h1>  \n            </div>\n            \n          </div>\n        )\n        \n  \n      }\n  \n      return this.props.children; \n    }\n  }\n  \n  export default ErrorBoundary;","import React, {lazy, Suspense} from 'react';\nimport './App.css';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport  { connect } from 'react-redux';\nimport {selectCurrentUser} from './redux/user/user.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport { selectSessionExpireWarning } from './redux/movie/movie.selectors';\nimport SpinnerLazy from './components/spinnerLazy/spinnerLazy.component';\nimport ErrorBoundary from './components/errorBoundary/errorBoundary.component';\n\nconst NotFoundPage = lazy(() => import('./pages/notFoundPage/notFoundPage.component'));\nconst Register = lazy(() => import('./pages/register/register.component'));\nconst PrivateHome = lazy(() => import('./pages/privateHome/privateHome.component'));\nconst PublicHome = lazy(() => import('./pages/publicHome/publicHome.component'));\nconst SingleMoviePage = lazy(() => import('./pages/singleMoviePage/singleMoviePage.component'));\nconst Login = lazy(() => import('./pages/login/login.component'));\nconst Header = lazy(() => import('./components/header/header.component'));\nconst Footer = lazy(() => import('./components/footer/footer.component'));\nconst SessionExpireModal = lazy(() => import('./components/sessionExpireModal/sessionExpireModal.component'));\n\nclass App extends React.Component {\n  render() {\n    const { currentUser, sessionExpireWarning } = this.props;\n    return (\n      <div className='App'>\n          <ErrorBoundary >\n          {/* <SpinnerLazy height='200px' color='dark'/> */}\n          <Suspense fallback={<p></p>}>\n            <Header />\n            {sessionExpireWarning ? <SessionExpireModal/> : ''}\n            {/* <Switch>\n                <Route exact path='/' render={() => {\n                  return currentUser ? <Redirect to='/home'/> :  <PublicHome />\n                }}\n                />\n                <Route exact path='/register' render={(props) => {\n                  return currentUser ? <Redirect to='/home'/>:  <Register {...props} />\n                }}/>\n                <Route exact path='/login' render={(props) => {\n                  return currentUser ? <Redirect to='/home' /> :  <Login {...props} />\n                }}/>\n                <Route exact path='/home' render={() => {\n                  return currentUser ? <PrivateHome /> :  <Redirect to='/login'/>\n                }}/>\n                <Route exact path='/movies/:imdbID/reviews' render={(props) => {\n                  return currentUser ? <SingleMoviePage {...props}/> :  <Redirect to='/login'/>\n                }} \n                />\n                <Route path='/*' component={NotFoundPage} />\n            </Switch> */}\n                        <Switch>\n                <Route exact path={process.env.PUBLIC_URL + '/'} render={() => {\n                  return currentUser ? <Redirect to='/home'/> :  <PublicHome />\n                }}\n                />\n                <Route exact path={process.env.PUBLIC_URL + '/register'} render={(props) => {\n                  return currentUser ? <Redirect to='/home'/>:  <Register {...props} />\n                }}/>\n                <Route exact path={process.env.PUBLIC_URL + '/login'} render={(props) => {\n                  return currentUser ? <Redirect to='/home' /> :  <Login {...props} />\n                }}/>\n                <Route exact path={process.env.PUBLIC_URL + '/home'} render={() => {\n                  return currentUser ? <PrivateHome /> :  <Redirect to='/login'/>\n                }}/>\n                <Route exact path={process.env.PUBLIC_URL + '/movies/:imdbID/reviews'} render={(props) => {\n                  return currentUser ? <SingleMoviePage {...props}/> :  <Redirect to='/login'/>\n                }} \n                />\n                <Route path='/*' component={NotFoundPage} />\n            </Switch>\n            <Footer />\n          </Suspense>\n          </ErrorBoundary>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser : selectCurrentUser,\n  sessionExpireWarning: selectSessionExpireWarning\n})\n\nexport default connect(mapStateToProps)(App);\n","import userActionTypes from './user.types';\nimport movieActionTypes from '../movie/movie.types';\n\nconst INITIAL_STATE = {\n    currentUser: null,\n    isLoading: false,\n    errorMessage: null\n}\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n    switch(action.type) {\n        case userActionTypes.LOGIN_USER_START:\n        case userActionTypes.REGISTER_USER_START:\n            return {\n                ...state,\n                isLoading: true\n            }\n        case userActionTypes.LOGIN_USER_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                currentUser: action.payload\n            }\n        case userActionTypes.LOGIN_USER_FAILURE:\n        case userActionTypes.REGISTER_USER_FAILURE:\n        case userActionTypes.LOGOUT_USER_FAILURE:\n            return {\n                ...state,\n                isLoading: false,\n                errorMessage: action.payload\n            }\n        case userActionTypes.LOGOUT_USER_SUCCESS:\n        case userActionTypes.RESET_USER:   \n        case movieActionTypes.GET_PRIVATE_MOVIES_SEARCH_FAILURE_SESSION:\n        case movieActionTypes.SUBMIT_MOVIEREVIEW_FAILURE_SESSION:\n        case movieActionTypes.GET_REVIEWSBYMOVIEID_FAILURE_SESSION:\n        case movieActionTypes.DELETE_REVIEW_FAILURE_SESSION:\n        case movieActionTypes.UPDATE_REVIEW_FAILURE_SESSION: \n   \n            return {\n                currentUser: null,\n                isLoading: false,\n                errorMessage: null\n            }\n        default:\n            return state;\n    }\n}\n\nexport default userReducer;","import movieActionTypes from './movie.types';\nimport userActionTypes from '../user/user.types';\n\nconst INITIAL_STATE = {\n    movieList: [],\n    singleMoviePage: [],\n    errorMessage: null,\n    isLoading: false,\n    sessionExpireWarning: false,\n    top3isLoading: false,\n    top3: []\n}\n\nconst movieReducer = (state = INITIAL_STATE, action) => {\n    switch(action.type) {\n        case movieActionTypes.GET_MOVIESEARCH_START:\n        case movieActionTypes.GET_PRIVATE_MOVIES_SEARCH_START:\n        case movieActionTypes.GET_REVIEWSBYMOVIEID_START:\n        case movieActionTypes.UPDATE_REVIEW_START:\n        case movieActionTypes.DELETE_REVIEW_START:\n        case movieActionTypes.SUBMIT_MOVIEREVIEW_START:\n            return {\n                ...state,\n                errorMessage: null,\n                isLoading: true\n            }\n        case movieActionTypes.GET_FAVORITEMOVIEREVIEW_START:\n            return {\n                ...state,\n                errorMessage: null,\n                top3isLoading: true\n            }\n        case movieActionTypes.GET_FAVORITEMOVIEREVIEW_SUCCESS: \n            return {\n                ...state,\n                top3isLoading: false,\n                top3: [...action.payload]\n            }\n        case movieActionTypes.GET_MOVIESEARCH_SUCCESS:\n        case movieActionTypes.GET_PRIVATE_MOVIES_SEARCH_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                movieList : [...action.payload],\n                singleMoviePage: []\n            }\n        case movieActionTypes.GET_REVIEWSBYMOVIEID_SUCCESS:\n        case movieActionTypes.UPDATE_REVIEW_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                singleMoviePage: [...action.payload]\n            }\n        case movieActionTypes.GET_MOVIESEARCH_FAILURE:\n        case movieActionTypes.GET_PRIVATE_MOVIES_SEARCH_FAILURE:\n        case movieActionTypes.UPDATE_REVIEW_FAILURE:\n        case movieActionTypes.DELETE_REVIEW_FAILURE:\n        case movieActionTypes.GET_FAVORITEMOVIEREVIEW_FAILURE:\n            return {\n                ...state,\n                movieList: [],\n                singleMoviePage: [],\n                isLoading: false,\n                top3isLoading: false,\n                errorMessage: action.payload\n            }\n        case movieActionTypes.DELETE_REVIEW_FAILURE_SESSION:\n        case movieActionTypes.GET_PRIVATE_MOVIES_SEARCH_FAILURE_SESSION:\n        case movieActionTypes.SUBMIT_MOVIEREVIEW_FAILURE_SESSION:\n        case movieActionTypes.GET_REVIEWSBYMOVIEID_FAILURE_SESSION:\n        case movieActionTypes.UPDATE_REVIEW_FAILURE_SESSION:\n            return {\n                ...state,\n                sessionExpireWarning: true,\n            }\n        case userActionTypes.LOGOUT_USER_SUCCESS:\n        case userActionTypes.LOGIN_USER_SUCCESS:\n        case movieActionTypes.RESET_MOVIESEARCH:\n            return {\n                ...state,\n                movieList: [],\n                singleMoviePage: [],\n                errorMessage: null,\n                isLoading: false,\n                sessionExpireWarning: false,\n                top3isLoading: false\n            }\n        default:\n            return state;\n    }\n}\n\nexport default movieReducer;","import { combineReducers } from 'redux';\nimport {persistReducer} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport userReducer from './user/user.reducer';\nimport movieReducer from './movie/movie.reducer';\n\nconst persistConfig = {\n    key: \"root\",\n    storage,\n    whitelist: ['user','movies']\n}\n\nconst rootReducer = combineReducers({\n    user: userReducer,\n    movies: movieReducer\n})\n\nexport default persistReducer(persistConfig, rootReducer);","export const registerUserAPI = async (payload) => {\n    try {\n        const resp = await fetch('https://filmcritic-app.herokuapp.com/register', {\n            method: \"POST\",\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(payload)\n        })\n        if(resp.status === 200) {\n            const data = await resp.json();\n            return data;\n        }  \n        return null;\n    } catch (error) {\n        console.debug('Caught an error inside registerUserAPI')\n        console.debug(error)\n        return null;\n    } \n}\n\nexport const loginUserAPI = async (payload) => {\n    try {\n        const resp = await fetch('https://filmcritic-app.herokuapp.com/login', {\n            method: \"POST\",\n            headers: {'Content-Type' : 'application/json'},\n            body: JSON.stringify(payload)\n        })\n        if(resp.status === 200) {\n            const data = await resp.json();\n            return data;\n        }\n        return null;\n    } catch (error) {\n        console.debug('Caught an error inside loginUserAPI');\n        console.debug(error);\n        return null;\n    }\n}\n\nexport const logoutUserAPI = async(token) => {\n    try { \n        const resp = await fetch('https://filmcritic-app.herokuapp.com/signout', {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'authorization' : `bearer ${token}`\n            }\n        })\n        if(resp.status === 200) {\n            const data = await resp.json()\n            return data;\n        } \n        return null;\n    } catch (error) {\n        console.debug('Caugh an error in logoutUserAPI');\n        return null;\n    }\n}\n\n","import userActionTypes from './user.types';\nimport  { registerUserSuccess, \n          registerUserFailure, \n          loginUserSuccess, \n          loginUserFailure, \n          logoutUserSuccess,\n          logoutUserFailure\n        } from './user.actions';\nimport { all, put, takeLatest, call } from 'redux-saga/effects';\nimport { registerUserAPI, loginUserAPI, logoutUserAPI, getUserBlogsAPI } from './user.api';\nimport movieActionTypes from '../movie/movie.types';\n\n\n// Register User and Login\nfunction* registerUser({payload}) {\n    try {\n        const userData = yield registerUserAPI(payload)\n        if(!userData) {\n            throw Error ('User already registered')\n        }\n        yield put(registerUserSuccess(payload))\n    } catch (error) {\n        yield put(registerUserFailure(error.message))\n    }\n}\n\nfunction* onRegisterUserSuccess() {\n    yield takeLatest(userActionTypes.REGISTER_USER_SUCCESS, loginUser)\n}\n\nfunction* onRegisterUserStart () {\n    yield takeLatest(userActionTypes.REGISTER_USER_START, registerUser)\n}\n\n// Login User\nfunction* loginUser({payload}) {\n    try {\n        const userDataAfterLogin = yield loginUserAPI(payload);\n        if(!userDataAfterLogin) {\n            throw Error('Wrong Credentials')\n        }\n        const {userData, accessToken} = userDataAfterLogin;\n        yield window.sessionStorage.setItem(\"token\", accessToken.token)\n        yield put(loginUserSuccess(userData));\n    } catch (error) {\n        yield put(loginUserFailure(error.message))\n    }\n}\n\nfunction* onLoginUserStart() {\n    yield takeLatest(userActionTypes.LOGIN_USER_START, loginUser)\n}\n\n// Log out User\nfunction* logOutUser() {\n    try {\n        const token = yield window.sessionStorage.getItem(\"token\");\n        const data = yield logoutUserAPI(token);\n        if(!data) {\n           throw Error('Can not log out user')\n        }\n        yield window.sessionStorage.removeItem(\"token\");\n        yield put(logoutUserSuccess())\n    } catch (error ) {\n        yield put(logoutUserFailure(error.message))\n    }\n}\n\nfunction* onLogOutUserStart() {\n    yield takeLatest(userActionTypes.LOGOUT_USER_START, logOutUser)\n}\n\n// Movie Session Failures\n// function* onDeleteReviewFailureSession() {\n//     yield takeLatest(movieActionTypes.DELETE_REVIEW_FAILURE_SESSION, logOutUser)\n// }\n\n// All User Sagas\nfunction* userSagas() {\n    yield all([call(onRegisterUserStart), call(onRegisterUserSuccess), call(onLogOutUserStart), call(onLoginUserStart)\n        // ,call(onDeleteReviewFailureSession)\n    ])\n}\n\nexport default userSagas;","// public route\nexport const getMoviesPublicAPI = async (searchWords) => {\n    try {   \n        const resp = await fetch(`https://filmcritic-app.herokuapp.com/movieSearchPublic/${searchWords}`)\n        if(resp.status === 200) {\n            const data = await resp.json();\n            return data;\n        }\n        return null;\n    } catch (error) {\n        console.debug('Caught an error inside getMoviesPublicAPI');\n        console.debug(error);\n        return null;\n    }\n}\n\nexport const getReviewsByMovieIDPublic = async() => {\n    try {\n        const resp = await fetch(`https://filmcritic-app.herokuapp.com/movies/top3`, {\n            method: \"GET\",\n            headers: {'Content-Type' : 'application/json'}\n        })\n        if(resp.status === 200) {\n            const data = await resp.json();\n            return data;\n        } else if (resp.status === 401) {\n            return resp.statusText;\n        }\n        return null;\n    } catch (error) {\n        console.debug('Caught an error inside getReviewByMovieID');\n        console.debug(error);\n        return null;\n    }\n}\n\n// authorized routes\nexport const getMoviesPrivateAPI = async (searchObj) => {\n    try {   \n        const {token, movieSearch} = searchObj;\n        const resp = await fetch(`https://filmcritic-app.herokuapp.com/movieSearchPrivate/${movieSearch}`, {\n            method: \"GET\",\n            headers: {'Content-Type' : 'application/json', 'authorization' : `bearer ${token}`}\n        })\n        if(resp.status === 200) {\n            const data = await resp.json();\n            return data;\n        } else if (resp.status === 401) {\n            const data = await resp.json();\n            return resp.statusText;\n        }\n        return null;\n    } catch (error) {\n        console.debug('Caught an error inside getMoviesPrivateAPI');\n        console.debug(error);\n        return null;\n    }\n}\n\nexport const submitMovieReview = async(reviewObj) => {\n    try {\n        const reviewBody = {\n            review: reviewObj.review,\n            score: reviewObj.score\n        }\n        const resp = await fetch(`https://filmcritic-app.herokuapp.com/users/${reviewObj.userID}/movies/${reviewObj.imdbID}/review`, {\n            method: \"POST\",\n            headers: {'Content-Type' : 'application/json', 'authorization' : `bearer ${reviewObj.token}`},\n            body: JSON.stringify(reviewBody)\n        })\n        if(resp.status === 200) {\n            const data = await resp.json();\n            const { id } = data;\n            const newData = {imdbID: id, userID: reviewObj.userID, token: reviewObj.token}\n            return newData;\n        } else if (resp.status === 401) {\n            return resp.statusText;\n        }\n        return null;\n    } catch (error) {\n        console.debug('Caught an error inside submitMovieReview');\n        console.debug(error);\n        return null;\n    }\n}\n\n\nexport const getReviewsByMovieID = async(reviewObj) => {\n    try {\n        const resp = await fetch(`https://filmcritic-app.herokuapp.com/users/${reviewObj.userID}/movies/${reviewObj.imdbID}/reviews`, {\n            method: \"GET\",\n            headers: {'Content-Type' : 'application/json', 'authorization' : `bearer ${reviewObj.token}`}\n        })\n        if(resp.status === 200) {\n            const data = await resp.json();\n            return data;\n        } else if (resp.status === 401) {\n            return resp.statusText;\n        }\n        return null;\n    } catch (error) {\n        console.debug('Caught an error inside getReviewByMovieID');\n        console.debug(error);\n        return null;\n    }\n}\n\n\nexport const updateReviewsByReviewID = async(reviewObj) => {\n    try {\n        const reviewBody = {\n            review: reviewObj.review,\n            fanscore: reviewObj.fanscore\n        }\n        const resp = await fetch(`https://filmcritic-app.herokuapp.com/users/${reviewObj.userID}/movies/${reviewObj.imdbID}/reviews/${reviewObj.reviewID}`, {\n            method: \"PUT\",\n            headers: {'Content-Type' : 'application/json', 'authorization' : `bearer ${reviewObj.token}`},\n            body: JSON.stringify(reviewBody)\n        })\n        if(resp.status === 200) {\n            const data = await resp.json();\n            return data;\n        } else if (resp.status === 401) {\n            return resp.statusText;\n        }\n        return null;\n    } catch (error) {\n        console.debug('Caught an error inside updateReviewsByReviewID');\n        console.debug(error);\n        return null;\n    }\n}\n\nexport const deleteReviewByReviewID = async(reviewObj) => {\n    try {\n        const resp = await fetch(`https://filmcritic-app.herokuapp.com/users/${reviewObj.userID}/movies/${reviewObj.imdbID}/reviews/${reviewObj.reviewID}`, {\n            method: \"DELETE\",\n            headers: {'Content-Type' : 'application/json', 'authorization' : `bearer ${reviewObj.token}`},\n        })\n        if(resp.status === 200) {\n            const data = await resp.json();\n            const { id } = data;\n            const newData = {imdbID: id, userID: reviewObj.userID, token: reviewObj.token}\n            return newData;\n        } else if (resp.status === 401) {\n            return resp.statusText;\n        }\n        return null;\n    } catch (error) {\n        console.debug('Caught an error inside deleteReviewByReviewID');\n        console.debug(error);\n        return null;\n    }\n}","import movieActionTypes from './movie.types';\nimport { takeLatest, put, call, all } from 'redux-saga/effects';\nimport { getMovieSearchSuccess, \n        getMovieSearchFailure, \n        submitMovieReviewSuccess, \n        submitMovieReviewFailure,\n        submitMovieReviewFailureSession,\n        getReviewsByMovieIDSuccess,\n        getReviewsByMovieIDFailure,\n        getReviewsByMovieIDFailureSession,\n        getPrivateMovieSearchSuccess,\n        getPrivateMovieSearchFailure,\n        getPrivateMovieSearchFailureSession,\n        updateReviewSuccess,\n        updateReviewFailure,\n        updateReviewFailureSession,\n        deleteReviewSuccess, \n        deleteReviewFailure,\n        deleteReviewFailureSession,\n        getFavoriteMovieReviewsSuccess,\n        getFavoriteMovieReviewsFailure\n    } from './movie.actions';\nimport { getMoviesPublicAPI, getMoviesPrivateAPI, submitMovieReview, getReviewsByMovieID, updateReviewsByReviewID, deleteReviewByReviewID, getReviewsByMovieIDPublic } from './movie.api';\n\n// Get Reviews\nfunction* getReviews({payload}) {\n    try {\n        const data = yield getReviewsByMovieID(payload);\n        if(!data) {\n            throw Error('Can not get reviews for this movie')\n        } else if (data === 'Unauthorized') {\n            throw Error(data)\n        }\n        yield put(getReviewsByMovieIDSuccess(data))\n    }catch (error) {\n        if(error.message === 'Unauthorized'){\n            yield put(getReviewsByMovieIDFailureSession(error.message))\n        } else {\n            yield put(getReviewsByMovieIDFailure(error.message))\n        }  \n    }\n}\n\nfunction* onGetReviewsByMovieIDStart() {\n    yield takeLatest(movieActionTypes.GET_REVIEWSBYMOVIEID_START, getReviews)\n}\n\n// Get Favorite Movie Reviews\nfunction* getFavoriteMovieReviews() {\n    try {\n        const data = yield getReviewsByMovieIDPublic();\n        if(!data) {\n            throw Error('Can not get reviews for this movie')\n        } \n        yield put(getFavoriteMovieReviewsSuccess(data))\n    }catch (error) {\n\n        yield put(getFavoriteMovieReviewsFailure(error.message))\n\n    }\n}\n\nfunction * onGetFavoriteMovieReviewStart() {\n    yield takeLatest(movieActionTypes.GET_FAVORITEMOVIEREVIEW_START, getFavoriteMovieReviews)\n\n}\n\n// Submit Review\nfunction* onSubmitReviewSuccess() {\n    yield takeLatest(movieActionTypes.SUBMIT_MOVIEREVIEW_SUCCESS, getReviews)\n}\n\nfunction* submitReview({payload}) {\n    try {   \n        const data = yield submitMovieReview(payload)\n        if(!data) {\n            throw Error('User Already Submitted A Review For This Movie')\n        } else if (data === 'Unauthorized') {\n            throw Error(data)\n        }\n        yield put(submitMovieReviewSuccess(data))\n    } catch (error) {\n        if(error.message === 'Unauthorized'){\n            yield put(submitMovieReviewFailureSession(error.message))\n        } else {\n            yield put(submitMovieReviewFailure(error.message))\n        } \n        \n    }\n}\n\nfunction* onSubmitMovieReviewStart() {\n    yield takeLatest(movieActionTypes.SUBMIT_MOVIEREVIEW_START, submitReview);\n}\n\n// Get Movies Authenticated Route\nfunction* fetchMoviesPrivate({payload}) {\n    try {   \n        const data = yield getMoviesPrivateAPI(payload);\n        if(!data) {\n            throw Error('Can not find movie. Try Again.')\n        } else if (data === 'Unauthorized') {\n            throw Error(data)\n        }\n        yield put(getPrivateMovieSearchSuccess(data))\n    } catch(error) {\n        if(error.message === 'Unauthorized'){\n            yield put(getPrivateMovieSearchFailureSession(error.message))\n        } else {\n            yield put(getPrivateMovieSearchFailure(error.message))\n        } \n    }\n}\n\nfunction* onGetPrivateMovieSearchStart() {\n    yield takeLatest(movieActionTypes.GET_PRIVATE_MOVIES_SEARCH_START, fetchMoviesPrivate)\n}\n\n// Get Movies Public Route\nfunction* fetchMoviesPublic({payload}) {\n    try {   \n        const data = yield getMoviesPublicAPI(payload);\n        if(!data) {\n            throw Error('Can not find movie. Try Again.')\n        }\n        yield put(getMovieSearchSuccess(data))\n    } catch(error) {\n        yield put(getMovieSearchFailure(error.message))\n    }\n}\n\nfunction* onGetPublicMovieSearchStart() {\n    yield takeLatest(movieActionTypes.GET_MOVIESEARCH_START, fetchMoviesPublic)\n}\n\n// Update Review \n\n\nfunction* updateReview({payload}) {\n    try {\n        const data = yield updateReviewsByReviewID(payload);\n        if(!data) {\n            throw Error('Can not update review')\n        } else if (data === 'Unauthorized') {\n            throw Error(data)\n        }\n        yield put(updateReviewSuccess(data))\n    }catch (error) {\n        if(error.message === 'Unauthorized'){\n            yield put(updateReviewFailureSession(error.message))\n        } else {\n            yield put(updateReviewFailure(error.message))\n        }  \n    }\n}\n\nfunction* onUpdateReviewStart() {\n    yield takeLatest(movieActionTypes.UPDATE_REVIEW_START, updateReview)\n}\n\n// Delete Review\nfunction* onDeleteReviewSuccess() {\n    yield takeLatest(movieActionTypes.DELETE_REVIEW_SUCCESS, getReviews)\n}\n\nfunction* deleteReview({payload}) {\n    try {\n        const data = yield deleteReviewByReviewID(payload);\n        if(!data) {\n            throw Error('Can not delete review')\n        } else if (data === 'Unauthorized') {\n            throw Error(data)\n        }\n        yield put(deleteReviewSuccess(data))\n    }catch (error) {\n        if(error.message === 'Unauthorized'){\n            yield put(deleteReviewFailureSession(error.message))\n        } else {\n            yield put(deleteReviewFailure(error.message))\n        }  \n    }\n}\n\nfunction* onDeleteReviewStart() {\n    yield takeLatest(movieActionTypes.DELETE_REVIEW_START, deleteReview)\n}\n\nfunction* movieSagas() {\n    yield all([call(onGetPublicMovieSearchStart), \n               call(onSubmitMovieReviewStart), \n               call(onGetReviewsByMovieIDStart), \n               call(onGetPrivateMovieSearchStart), \n               call(onSubmitReviewSuccess),\n               call(onUpdateReviewStart),\n               call(onDeleteReviewStart),\n               call(onDeleteReviewSuccess),\n               call(onGetFavoriteMovieReviewStart)\n            ])\n}\n\nexport default movieSagas;","import { all, call } from 'redux-saga/effects';\n\n// import sagas here\nimport userSagas from './user/users.sagas';\nimport movieSagas from './movie/movie.sagas';\n\nfunction* rootSaga() {\n    yield all([call(userSagas), call(movieSagas)])\n}\n\nexport default rootSaga;","import { createStore, applyMiddleware } from 'redux';\n// Middlewares\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\nimport {persistStore} from 'redux-persist';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware, logger];\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nsagaMiddleware.run(rootSaga);\n\nexport const persistor = persistStore(store);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport {withRouter} from 'react-router-dom';\n\nclass ScrollToTop extends React.Component {\n\n    componentDidUpdate(prevProps) {\n      const { location } = this.props;\n      if (location.pathname !== prevProps.location.pathname) {\n        window.scrollTo(0, 0);\n      }\n    }\n    \n    render() {\n      const { children } = this.props;\n      return children;\n    }\n  }\n  \n  export default withRouter(ScrollToTop);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter} from 'react-router-dom';\n// Redux\nimport {Provider} from 'react-redux';\nimport {store, persistor} from './redux/store';\nimport {PersistGate} from 'redux-persist/integration/react';\nimport * as serviceWorker from './serviceWorker';\nimport ScrollToTopComponent from './components/scrollToTop/scrollToTop.component';\n\nReactDOM.render(\n  <Provider store={store}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <PersistGate persistor={persistor}>\n          <ScrollToTopComponent>\n             <App />\n          </ScrollToTopComponent>\n        </PersistGate>\n      </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const userActionTypes = {\n    RESET_USER: 'RESET_USER',\n\n    LOGIN_USER_START: 'LOGIN_USER_START',\n    LOGIN_USER_SUCCESS: 'LOGIN_USER_SUCCESS',\n    LOGIN_USER_FAILURE: 'LOGIN_USER_FAILURE',\n\n    REGISTER_USER_START: 'REGISTER_USER_START',\n    REGISTER_USER_SUCCESS: 'REGISTER_USER_SUCCESS',\n    REGISTER_USER_FAILURE: 'REGISTER_USER_FAILURE',\n\n    LOGOUT_USER_START: 'LOGOUT_USER_START',\n    LOGOUT_USER_SUCCESS: 'LOGOUT_USER_SUCCESS',\n    LOGOUT_USER_FAILURE: 'LOGOUT_USER_FAILURE'\n}\n\nexport default userActionTypes;"],"sourceRoot":""}