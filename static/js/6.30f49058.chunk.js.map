{"version":3,"sources":["components/privateMovieSearchBar/privateMovieSearchBar.component.jsx","components/top3MovieReviewsPrivate/top3MovieReviewsPrivate.component.jsx","components/top3BannerPrivate/top3BannerPrivate.component.jsx","pages/privateHome/privateHome.component.jsx","components/withSpinner/withSpinner.component.jsx","components/formInput/formInput.component.jsx","components/validationMessage/validationMessage.component.jsx","components/accessPrivatePageModal/accessPrivatePageModal.component.jsx","components/privateMovie/privateMovie.component..jsx","components/movie/movie.component.jsx","components/movieList/movieList.component.jsx","components/movieList/movieList.container.jsx"],"names":["PrivateMovieSearchBar","props","state","movieSearch","handleOnChange","bind","handleMovieSearchButton","handleOnKeyPress","e","target","name","value","this","setState","preventDefault","getPrivateMovieSearchStart","token","window","sessionStorage","getItem","key","errorMessage","isMovieListLoading","className","id","label","type","placeholder","onChange","onKeyPress","colorCode","message","Button","onClick","outline","color","disabled","React","Component","mapStateToProps","createStructuredSelector","selectMovieErrorMessage","selectIsMovieListLoading","connect","dispatch","searchObj","Top3MovieReviewsPrivate","imdbRating","audienceRating","calculateImdbRating","calculateAudienceRating","calculateAudienceReviewLength","calculatePluralTense","determineRatingImage","timer","mounted","clearTimeout","audienceScore","setTimeout","parseFloat","toFixed","averagefanscore","fanreviews","length","imgSrc","score","imdbVotes","Poster","imdbID","history","src","alt","width","push","style","height","strokeWidth","styles","buildStyles","rotation","strokeLinecap","pathTransitionDuration","pathColor","textColor","trailColor","backgroundColor","marginTop","fontSize","withRouter","Top3BannerPrivate","getFavoriteMovieReviewsStart","top3","map","movieData","selectTopBanner","PrivateHome","resetMovieSearch","privateRoute","currentUser","selectCurrentUser","movieList","selectMovieList","submitMovieReviewStart","review","WithSpinner","WrappedComponent","isLoading","FormInput","for","ValidationMessage","AccessPrivatePageModal","modal","toggle","handleRegister","handleLogin","handleLoginGuest","currState","isOpen","PrivateMovie","determineIfPlural","determineAudienceRatingText","determinePoster","displayProperTitleLength","Title","padding","slice","Actors","Released","Movie","Plot","MovieList","movie","MovieListContainer"],"mappings":"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","file":"static/js/6.30f49058.chunk.js","sourcesContent":["import React from 'react';\nimport './privateMovieSearchBar.styles.scss';\nimport FormInput from '../formInput/formInput.component';\nimport ValidationMessage from '../validationMessage/validationMessage.component';\nimport { Button } from 'reactstrap';\nimport { getPrivateMovieSearchStart } from '../../redux/movie/movie.actions'\nimport {connect } from 'react-redux';\nimport { selectMovieErrorMessage, selectIsMovieListLoading } from '../../redux/movie/movie.selectors'\nimport { createStructuredSelector } from 'reselect'\n\nclass PrivateMovieSearchBar extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            movieSearch: ''\n        }\n        this.handleOnChange = this.handleOnChange.bind(this);\n        this.handleMovieSearchButton = this.handleMovieSearchButton.bind(this);\n        this.handleOnKeyPress = this.handleOnKeyPress.bind(this);\n    }\n\n    handleOnChange(e) {\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleMovieSearchButton(e) {\n        e.preventDefault();\n        const { movieSearch } = this.state;\n        const { getPrivateMovieSearchStart} = this.props;\n        const token = window.sessionStorage.getItem('token');\n        const searchObj = {\n            token,\n            movieSearch\n        }\n        getPrivateMovieSearchStart(searchObj);\n    }\n\n    handleOnKeyPress(e) {\n        if(e.key === 'Enter') {\n            this.handleMovieSearchButton(e);\n        }\n    }\n\n    render() {\n        const { errorMessage, isMovieListLoading } = this.props;\n        return (\n            <div className='PrivateMovieSearchBar'>\n                <form>\n                    <FormInput \n                        id='movie-search'\n                        label='Movie Search'\n                        name='movieSearch'\n                        type='text'\n                        placeholder='movie name'\n                        onChange={this.handleOnChange}\n                        onKeyPress = {this.handleOnKeyPress}\n                    />\n                    {errorMessage ? <ValidationMessage colorCode='#363636' message={errorMessage}/> : ''}  \n                    <Button onClick={this.handleMovieSearchButton} outline color='secondary' disabled={isMovieListLoading} >Search</Button>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getPrivateMovieSearchStart: (searchObj) => dispatch(getPrivateMovieSearchStart(searchObj))\n    }\n}\n\nconst mapStateToProps = createStructuredSelector({\n    errorMessage: selectMovieErrorMessage,\n    isMovieListLoading: selectIsMovieListLoading\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrivateMovieSearchBar);","import React from 'react';\nimport {\n    CircularProgressbarWithChildren,\n    buildStyles\n  } from \"react-circular-progressbar\";\nimport {Button} from 'reactstrap';\nimport './top3MovieReviewsPrivate.styles.scss';\nimport {withRouter} from 'react-router-dom';\n\nclass Top3MovieReviewsPrivate extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            imdbRating: 0,\n            audienceRating: 0\n        }\n        this.calculateImdbRating = this.calculateImdbRating.bind(this);\n        this.calculateAudienceRating = this.calculateAudienceRating.bind(this);\n        this.calculateAudienceReviewLength = this.calculateAudienceReviewLength.bind(this);\n        this.calculatePluralTense = this.calculatePluralTense.bind(this);\n        this.determineRatingImage = this.determineRatingImage.bind(this);\n        this.timer = this.timer.bind(this)\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.timer()\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        clearTimeout(this.timer)\n    }\n\n    timer() {\n        const {imdbRating} = this.props;\n        const audienceScore = this.calculateAudienceRating()\n        setTimeout(() => {\n            (this.mounted &&  \n                this.setState({imdbRating: (parseFloat(imdbRating)/10 * 100).toFixed(0),\n                    audienceRating: audienceScore\n                }))   \n        }, 0)\n    }\n\n    calculateImdbRating() {\n        const {imdbRating} = this.props;\n        return (parseFloat(imdbRating)/10 * 100).toFixed(0);       \n    }\n\n    calculateAudienceRating() {\n        const {averagefanscore } = this.props;\n        if(averagefanscore) {\n            const percentageScore = (parseFloat(averagefanscore)/5 * 100).toFixed(0);\n            return percentageScore;\n        } \n        return 0;  \n    }\n\n    calculateAudienceReviewLength() {\n        const {fanreviews } = this.props\n        if(fanreviews.length === 1) {\n            return `${fanreviews.length}`\n        } else if (fanreviews.length < 1) {\n            return ''\n        }\n        return `${fanreviews.length}`\n    }\n\n    calculatePluralTense() {\n        const { fanreviews } = this.props;\n        if(fanreviews.length === 1) {\n            return `Fan Review`\n        } else if (fanreviews.length < 1) {\n            return 'No Reviews'\n        }\n        return `Fan Reviews`\n    }\n\n    determineRatingImage() {\n        const {averagefanscore} = this.props;\n        let imgSrc;\n        if(averagefanscore) {\n            const score = (parseFloat(averagefanscore)/5 * 100).toFixed(0)\n            if(score > 0 && score < 70) {\n                // https://www.flaticon.com/free-icon/dislike_1301458\n                // Freepik\n                imgSrc = 'https://www.flaticon.com/svg/static/icons/svg/1301/1301458.svg';\n            } else if (score == 0){\n                imgSrc= 'https://www.flaticon.com/svg/static/icons/svg/942/942751.svg'\n            } else if (score >= 70 && score < 90) {\n                // https://www.flaticon.com/free-icon/like_1301447?term=like%201301447&page=1&position=1\n                // Freepik\n                imgSrc = 'https://www.flaticon.com/svg/static/icons/svg/1301/1301447.svg'\n            } else if (score >= 90) {\n                // https://www.flaticon.com/free-icon/star_616655?term=star&page=1&position=15\n                // Freepik\n                imgSrc = 'https://www.flaticon.com/svg/static/icons/svg/616/616655.svg'\n            } \n            return imgSrc\n        }\n        // https://www.flaticon.com/free-icon/conversation_942751?term=942751&page=1&position=1\n        // Freepik\n        imgSrc= 'https://www.flaticon.com/svg/static/icons/svg/942/942751.svg'\n        return imgSrc\n    }\n\n    render() {\n        const {imdbVotes, Poster, fanreviews, imdbID, history} = this.props;\n        return (\n            <div className='Top3MovieReviewsPrivate'>\n                <div className='row justify-content-center'>\n                    <div className='col-6'>\n                        <div className='Movie-Img d-flex flex-column align-items-center'>\n                            <img src={Poster} alt=\"movie\" width='120'/>\n                            <Button onClick={() => history.push(`/movies/${imdbID}/reviews`)} >Click for More!</Button>\n                        </div>\n                    </div>\n                    <div className='col-6'>\n                        <div className='Critic d-flex flex-column justify-content-center align-items-center'>\n                            <div className='rating'>\n                                <div style={{width: '80px', height: '80px'}}>\n                                    <CircularProgressbarWithChildren \n                                        value={this.state.imdbRating}\n                                        strokeWidth= {11}\n                                        styles={buildStyles({\n                                            rotation: 0,\n                                            strokeLinecap: 'round',\n                                            pathTransitionDuration: 1,\n                                            pathColor: `rgba(240,138,93, ${this.state.imdbRating / 100})`,\n                                            textColor: '#f88',\n                                            trailColor: '#d6d6d6',\n                                            backgroundColor: '#3e98c7',\n                                        })}\n                                    >\n                                        {/* https://www.flaticon.com/free-icon/imdb_889118?term=imdb&page=1&position=3 */}\n                                        {/* Pixel Perfect */}\n                                        <img style={{ width: 45, marginTop: -7}} src='https://www.flaticon.com/svg/static/icons/svg/889/889118.svg' alt=\"rating\" />\n                                        <div style={{ fontSize: 13, marginTop: -10 }}>\n                                            {this.state.imdbRating}%\n                                        </div>\n                                    </CircularProgressbarWithChildren>\n                                </div>\n                            </div>\n                            <div className='label'><span className='text-bold'>{imdbVotes}</span>&nbsp;Votes</div>\n                        </div>\n                        <div className='Audience d-flex flex-column justify-content-center align-items-center mt-2'>\n                            <div className='rating'>   \n                                <div style={{width: '80px', height: '80px'}}>\n                                    <CircularProgressbarWithChildren \n                                        value={this.calculateAudienceRating()}\n                                        strokeWidth= {11}\n                                        styles={buildStyles({\n                                            rotation: 0,\n                                            strokeLinecap: 'round',\n                                            pathTransitionDuration: 1,\n                                            pathColor: `rgba(62, 152, 199, ${this.calculateAudienceRating() / 100})`,\n                                            textColor: '#f88',\n                                            trailColor: '#d6d6d6',\n                                            backgroundColor: '#3e98c7',\n                                        })}\n                                    >\n                                        <img style={{ width: 35, marginTop: 0}} src={`${this.determineRatingImage()}`} alt=\"rating\" />\n                                        <div className='percent' style={{ fontSize: 13, marginTop: 0 }}>\n                                            {this.calculateAudienceRating() == 0 ? '' : this.calculateAudienceRating() + '%'}\n                                        </div> \n                                    </CircularProgressbarWithChildren>\n                                </div>\n                            </div>\n                            <div className='label'>\n                                {fanreviews  ? <div><span className='text-bold-audience'>{this.calculateAudienceReviewLength() } </span> {this.calculatePluralTense()}</div>: 'No Reviews'}    \n                            </div>\n                        </div>\n                    </div> \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Top3MovieReviewsPrivate);","import React from 'react';\nimport './top3BannerPrivate.styles.scss';\nimport {connect} from 'react-redux';\nimport { getFavoriteMovieReviewsStart } from '../../redux/movie/movie.actions';\nimport { selectTopBanner, selectIsMovieListLoading } from '../../redux/movie/movie.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport Top3MovieReviewsPrivate from '../top3MovieReviewsPrivate/top3MovieReviewsPrivate.component';\n\nclass Top3BannerPrivate extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    componentDidMount() {\n        const {getFavoriteMovieReviewsStart} = this.props;\n        getFavoriteMovieReviewsStart();\n    }\n\n    render(){\n        const {top3} = this.props;\n        return(\n            <div className='Top3BannerPrivate'>\n                <div className='container'>\n                    <div className='row justify-content-between align-items-center'>\n                        <div className='col-lg-2 col-md-12'>\n                        <h3 className='text-center'>POPULAR MOVIES</h3> \n                        </div>   \n                        {top3.map(movieData => {\n                            return  <div className='col-md-12 col-lg-3'>\n                                <Top3MovieReviewsPrivate {...movieData} key={movieData.imdbID}/>\n                            </div>\n                        })}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getFavoriteMovieReviewsStart: () =>  dispatch(getFavoriteMovieReviewsStart())\n    }\n}\n\nconst mapStateToProps = createStructuredSelector({\n    top3: selectTopBanner\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Top3BannerPrivate);","import React from 'react';\nimport './privateHome.styles.scss';\nimport { submitMovieReviewStart, resetMovieSearch } from '../../redux/movie/movie.actions';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCurrentUser } from '../../redux/user/user.selectors';\nimport { selectMovieList, selectIsMovieListLoading } from '../../redux/movie/movie.selectors';\nimport PrivateMovieSearchBar from '../../components/privateMovieSearchBar/privateMovieSearchBar.component';\nimport MovieListContainer from '../../components/movieList/movieList.container';\nimport Top3BannerPrivate from '../../components/top3BannerPrivate/top3BannerPrivate.component';\n\nclass PrivateHome extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        const {resetMovieSearch } = this.props;\n        resetMovieSearch();\n    }\n\n    render() {\n        return (\n            <div className='PrivateHome'>\n                <div className='Top3BannerPrivate'>\n                    <Top3BannerPrivate />\n                </div>\n                <div className='container'>\n                    <div className='row justify-content-center'>\n                        <div className='col-lg-5'>\n                            <PrivateMovieSearchBar />\n                        </div>\n                    </div>\n                    <div className='row justify-content-center'>\n                        <div className='col-lg-9'>\n                            <MovieListContainer {...this.props} color='light' privateRoute={true}/>\n                        </div>\n                    </div>\n                </div>    \n            </div>\n        )\n    }  \n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      submitMovieReviewStart: (review) => dispatch(submitMovieReviewStart(review)),\n      resetMovieSearch: () =>  dispatch(resetMovieSearch())\n    }\n}\n\nconst mapStateToProps = createStructuredSelector({\n    currentUser: selectCurrentUser,\n    movieList: selectMovieList,\n    isMovieListLoading: selectIsMovieListLoading\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrivateHome);","import React from 'react';\nimport { Spinner } from 'reactstrap';\nimport './withSpinner.styles.scss';\n\nconst WithSpinner = (WrappedComponent, height) => {\n    const componentWithSpinner = ({isLoading, ...props}) => {\n        const {color} = props;\n        return isLoading ? (\n            <div className='PageWithSpinner' style={{height: height}}>\n                <Spinner style={{ width: '5rem', height: '5rem' }} color={color} />\n            </div>\n        ) : (\n            <WrappedComponent {...props}/>\n        )\n    }\n    return componentWithSpinner;\n}\n\nexport default WithSpinner;","import React from 'react';\nimport { FormGroup, Label, Input } from 'reactstrap';\n\nconst FormInput = ({id, label, name, type, placeholder, onChange, value, onKeyPress}) => {\n    return (\n        <div className='FormInput'>\n            <FormGroup>\n                <Label for={id}>{label}</Label>\n                <Input type={type} name={name} id={id} placeholder={placeholder} onChange={onChange} value={value} onKeyPress={onKeyPress}/>\n            </FormGroup>\n        </div>\n    )\n}\n\nexport default FormInput;","import React from 'react';\nimport './validationMessage.styles.scss';\n\nconst ValidationMessage = ({...props}) => {\n    const {colorCode, message} = props;\n    return (\n        <div className='ValidationMessage'>\n            {/* https://www.flaticon.com/free-icon/warning_1199619 */}\n            {/* Freepik */}\n            <img src=\"https://www.flaticon.com/svg/static/icons/svg/1199/1199619.svg\" alt=\"warning\"/>\n            <p style={{color: `${colorCode}`}}>{message}</p>\n        </div>\n    )\n}\n\nexport default ValidationMessage;","import React from 'react';\nimport './accessPrivatePageModal.styles.scss';\nimport { Button, Modal, ModalHeader, ModalBody} from 'reactstrap';\nimport {withRouter} from 'react-router-dom';\n\nclass AccessPrivatePageModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal: false,\n        }\n        this.toggle = this.toggle.bind(this);\n        this.handleRegister = this.handleRegister.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.handleLoginGuest = this.handleLoginGuest.bind(this);\n    }\n\n    toggle() {\n        this.setState((currState) =>{\n            return {\n                modal: !currState.modal\n            }\n        })\n    }\n\n    handleRegister() {\n        const {history} = this.props;\n        history.push('/register');\n        this.toggle();\n    }\n\n    handleLogin() {\n        const {history} = this.props;\n        history.push('/login');\n        this.toggle();\n    }\n\n    handleLoginGuest() {\n        const {history} = this.props;\n        history.push('/login');\n        this.toggle();\n    }\n\n    render() {\n        const {label, history} = this.props;\n        return(\n            <div >\n                <Button onClick={this.toggle}> {label} </Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} >\n                    <ModalHeader toggle={this.toggle}>FilmCritic App</ModalHeader>\n                    <ModalBody>\n                     <div className='AccessPrivatePageModal'>\n                         <div className='details'>  \n                             <p> Login or Register to Write A Movie Review!</p>\n                         </div>\n                         <div>\n                            <div  className='options'>\n                            <button className='btn btn-sm btn-warning' onClick={this.handleRegister}>Register</button> Create New Account \n                            </div>\n                            <div  className='options'>\n                                <button className='btn btn-sm btn-warning' onClick={this.handleLogin}>Login</button> Have Existing Account \n                            </div>        \n                            <div  className='options'>\n                                <button className='btn btn-sm btn-info' onClick={this.handleLoginGuest}>Guest</button>Login as Guest\n                            </div>       \n                         </div>\n                     </div>\n                    </ModalBody>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(AccessPrivatePageModal);","import React from 'react';\nimport './privateMovie.styles.scss';\nimport { Button } from 'reactstrap';\nimport {withRouter} from 'react-router-dom';\n\nclass PrivateMovie extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            audienceRating: ''\n        }\n        this.calculateImdbRating = this.calculateImdbRating.bind(this)\n        this.calculateAudienceRating = this.calculateAudienceRating.bind(this)\n        this.determineRatingImage = this.determineRatingImage.bind(this)\n        this.determineIfPlural = this.determineIfPlural.bind(this)\n        this.determineAudienceRatingText = this.determineAudienceRatingText.bind(this)\n        this.determinePoster = this.determinePoster.bind(this)\n        this.displayProperTitleLength = this.displayProperTitleLength.bind(this)\n    }\n\n    calculateImdbRating() {\n        const {imdbRating} = this.props;\n        return `${(parseFloat(imdbRating)/10 * 100).toFixed(0)}%`\n    }\n\n    calculateAudienceRating() {\n        const {averagefanscore} = this.props;\n        if(averagefanscore) {\n            if(parseFloat(averagefanscore) === 0) {\n                return ''\n            }\n            return `${(parseFloat(averagefanscore)/5 * 100).toFixed(0)}%`\n        } \n        return ''\n    }\n\n    determineRatingImage() {\n        const {averagefanscore} = this.props;\n        const score = (parseFloat(averagefanscore)/5 * 100).toFixed(0)\n        let imgSrc;\n        if(score > 0 && score < 70) {\n            // https://www.flaticon.com/free-icon/dislike_1301458\n            // Freepik\n            imgSrc = 'https://www.flaticon.com/svg/static/icons/svg/1301/1301458.svg';\n        } else if (score >= 70 && score < 90) {\n             // https://www.flaticon.com/free-icon/like_1301447?term=like%201301447&page=1&position=1\n            // Freepik\n            imgSrc = 'https://www.flaticon.com/svg/static/icons/svg/1301/1301447.svg'\n        } else if (score >= 90) {\n             // https://www.flaticon.com/free-icon/star_616655?term=star&page=1&position=15\n            // Freepik\n            imgSrc = 'https://www.flaticon.com/svg/static/icons/svg/616/616655.svg'\n        } else  {\n             // https://www.flaticon.com/free-icon/conversation_942751?term=942751&page=1&position=1\n            // Freepik\n            imgSrc= 'https://www.flaticon.com/svg/static/icons/svg/942/942751.svg'\n        }\n        return <img src={imgSrc} alt=\"audience-icon\" width='70px'/> \n    }\n\n    determineIfPlural() {\n        const {fanreviews} = this.props;\n        if(fanreviews.length === 1) {\n            return 'Review'\n        }\n        return 'Reviews'\n    }\n\n    determineAudienceRatingText() {\n        const {fanreviews} = this.props;\n        if(fanreviews) {\n            if(fanreviews.length === 0) {\n                return 'Be First to Review!'\n            }\n            return `${fanreviews.length} Fan ${this.determineIfPlural()}`\n        }\n        return 'Be First to Review!'\n    }\n\n    determinePoster() {\n        const {Poster, Title} = this.props;\n        if(Poster === 'N/A') {\n            // Freepik\n            return  <img src='https://www.flaticon.com/svg/static/icons/svg/20/20773.svg' alt={Title} width='100px' height='100px' style={{backgroundColor: '#84a9ac', padding: '0 30px'}}/>\n        }\n        return  <img src={Poster} alt={Title} width='220px' height='280px'/>\n    }\n\n    displayProperTitleLength() {\n        const {Title} = this.props;\n        if(Title.length > 40) {\n            return Title.slice(0, 40) + '...'\n        }\n        return Title;\n    }\n\n    render() {\n        const { Actors, Released, imdbVotes, imdbID, fanreviews, history} = this.props;\n        return (\n            <div className='PrivateMovie'>\n                <div className='main-section'>\n                    <div className='img'>\n                        {this.determinePoster()}\n                    </div>\n                    <div className='details'>\n                        <div className='top'>\n                            <div className='d-flex justify-content-between align-items-center'>\n                                <div>\n                                <h3>{this.displayProperTitleLength()}</h3>\n                                </div>\n                                {/* <div  className='view-more'>\n                                    <Button onClick={() => history.push(`/movies/${imdbID}/reviews`)} color='warning'>More!</Button>\n                                </div> */}\n                            </div>\n                            <p><span className='text-bold'>Released:</span>  {Released}</p>\n                            <p><span className='text-bold'>Actors:</span>  {Actors}</p>\n                            <div  className='view-more'>\n                                    <Button onClick={() => history.push(`/movies/${imdbID}/reviews`)} color='warning'>Click for More!</Button>\n                                </div>\n                        </div>\n                        <div className='ratings'>\n                            <div className='imdb-review'>\n                                <div className='critic-score'>\n                                    <img src=\"https://www.flaticon.com/svg/static/icons/svg/889/889118.svg\" alt=\"imdb-icon\" width='75px' />\n                                    <p>{this.calculateImdbRating()}</p>\n                                </div>\n                                <div className='total'>\n                                    {imdbVotes ?    imdbVotes + ` Critic Votes` : ''}\n                                </div>\n                            </div>\n                            <div className='fan-review'>\n                                <div className='fan-score'>\n                                    {this.determineRatingImage()}\n                                    <p>  {this.calculateAudienceRating()}</p>\n                                </div>\n                                <div className='total'>\n                                    {this.determineAudienceRatingText()}\n                                </div>\n                            </div>     \n                        </div>\n                    </div>   \n                </div>    \n            </div>\n        )\n    }   \n}\n\nexport default withRouter(PrivateMovie);","import React from 'react';\nimport './movie.styles.scss';\nimport AccessPrivatePageModal from '../accessPrivatePageModal/accessPrivatePageModal.component';\n\nclass Movie extends React.Component {\n    constructor(props) {\n        super(props)\n        this.determinePoster = this.determinePoster.bind(this)\n        this.displayProperTitleLength = this.displayProperTitleLength.bind(this)\n    }\n\n    determinePoster() {\n        const {Poster, Title} = this.props;\n        if(Poster === 'N/A') {\n            // Freepik\n            return  <img src='https://www.flaticon.com/svg/static/icons/svg/20/20773.svg' alt={Title} width='100px' height='100px' style={{backgroundColor: '#84a9ac', padding: '0 30px'}}/>\n        }\n        return  <img src={Poster} alt={Title} width='200px' height='250px'/>\n    }\n\n    displayProperTitleLength() {\n        const {Title} = this.props;\n        if(Title.length > 65) {\n            return Title.slice(0, 65) + '...'\n        }\n        return Title;\n    }\n\n    render() {\n        const {Plot} = this.props;\n        return (\n            <div className='Movie'>\n                <div className='img'>\n                    {this.determinePoster()}\n                </div>\n                <div className='details'>\n                    <h4>{this.displayProperTitleLength()}</h4>\n                    <p> {Plot}</p>\n                    <div className='public-route text-right'>\n                        <AccessPrivatePageModal label='Write A Movie Review!' {...this.props}/>\n                    </div>  \n                </div>    \n            </div>\n        )\n    }\n}\n\nexport default Movie;","import React from 'react';\nimport './movieList.styles.scss';\nimport PrivateMovie from '../privateMovie/privateMovie.component.';\nimport Movie from '../movie/movie.component';\n\nconst MovieList = ({...props}) => {\n    const {movieList, privateRoute} = props;\n    return(\n        <div className='MovieList'>\n            {movieList.map(movie => {\n                return  privateRoute ? <PrivateMovie {...movie} key={movie.imdbID} {...props}/> : <Movie {...movie} key={movie.imdbID} {...props}/> \n            })}\n        </div>\n    )\n}\n\nexport default MovieList;","import { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsMovieListLoading} from '../../redux/movie/movie.selectors'\nimport MovieList from './movieList.component';\nimport WithSpinner from '../withSpinner/withSpinner.component';\n\nconst mapStateToProps = createStructuredSelector({\n    isLoading: selectIsMovieListLoading\n})\n\nconst MovieListContainer = connect(mapStateToProps)(WithSpinner(MovieList, '200px'))\n\nexport default MovieListContainer;"],"sourceRoot":""}