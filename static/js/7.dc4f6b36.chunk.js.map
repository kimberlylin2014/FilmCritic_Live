{"version":3,"sources":["components/publicMovieSearchBar/publicMovieSearchBar.component.jsx","components/top3MovieReviews/top3MovieReviews.component.jsx","pages/publicHome/publicHome.component.jsx","components/top3Banner/top3Banner.component.jsx","components/withSpinner/withSpinner.component.jsx","components/formInput/formInput.component.jsx","components/validationMessage/validationMessage.component.jsx","components/accessPrivatePageModal/accessPrivatePageModal.component.jsx","components/privateMovie/privateMovie.component..jsx","components/movie/movie.component.jsx","components/movieList/movieList.component.jsx","components/movieList/movieList.container.jsx"],"names":["PublicMovieSearchBar","props","state","movieSearch","handleOnChange","bind","handleMovieSearchButton","handleOnKeyPress","e","target","name","value","this","setState","preventDefault","getMovieSearchStart","key","errorMessage","isMovieListLoading","className","id","label","type","placeholder","onChange","onKeyPress","colorCode","message","Button","onClick","disabled","React","Component","mapStateToProps","createStructuredSelector","selectMovieErrorMessage","selectIsMovieListLoading","connect","dispatch","searchWords","Top3MovieReviews","imdbRating","audienceRating","calculateImdbRating","calculateAudienceRating","calculateAudienceReviewLength","calculatePluralTense","determineRatingImage","timer","mounted","clearTimeout","audienceScore","setTimeout","parseFloat","toFixed","averagefanscore","fanreviews","length","imgSrc","score","Poster","imdbVotes","src","alt","width","style","height","strokeWidth","styles","buildStyles","rotation","strokeLinecap","pathTransitionDuration","pathColor","textColor","trailColor","backgroundColor","marginTop","fontSize","PublicHome","resetMovieSearch","window","sessionStorage","removeItem","getFavoriteMovieReviewsStart","color","privateRoute","currentUser","selectCurrentUser","movieList","selectMovieList","top3","selectTopBanner","loginUserStart","credentials","WithSpinner","WrappedComponent","isLoading","FormInput","for","ValidationMessage","AccessPrivatePageModal","modal","toggle","handleRegister","handleLogin","handleLoginGuest","currState","history","push","isOpen","withRouter","PrivateMovie","determineIfPlural","determineAudienceRatingText","determinePoster","displayProperTitleLength","Title","padding","slice","Actors","Released","imdbID","Movie","Plot","MovieList","map","movie","MovieListContainer"],"mappings":"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","file":"static/js/7.dc4f6b36.chunk.js","sourcesContent":["import React from 'react';\nimport './publicMovieSearchBar.styles.scss'\nimport FormInput from '../formInput/formInput.component';\nimport { Button } from 'reactstrap';\nimport { getMovieSearchStart } from '../../redux/movie/movie.actions'\nimport {connect } from 'react-redux';\nimport { selectMovieErrorMessage, selectIsMovieListLoading } from '../../redux/movie/movie.selectors'\nimport { createStructuredSelector } from 'reselect';\nimport ValidationMessage from '../validationMessage/validationMessage.component';\n\nclass PublicMovieSearchBar extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            movieSearch: ''\n        }\n        this.handleOnChange = this.handleOnChange.bind(this);\n        this.handleMovieSearchButton = this.handleMovieSearchButton.bind(this);\n        this.handleOnKeyPress = this.handleOnKeyPress.bind(this);\n    }\n\n    handleOnChange(e) {\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleMovieSearchButton(e) {\n        e.preventDefault();\n        const { movieSearch } = this.state;\n        const { getMovieSearchStart } = this.props;\n        getMovieSearchStart(movieSearch);\n    }\n\n    handleOnKeyPress(e) {\n        if(e.key === 'Enter') {\n            this.handleMovieSearchButton(e);\n        }\n    }\n\n    render() {\n        const { errorMessage, isMovieListLoading } = this.props;\n        return (\n            <div className='PublicMovieSearchBar'>\n                <form>\n                    <FormInput \n                        id='movie-search'\n                        label='Search Movie'\n                        name='movieSearch'\n                        type='text'\n                        placeholder='movie name'\n                        onChange={this.handleOnChange}\n                        onKeyPress = {this.handleOnKeyPress}\n                    />\n                    {errorMessage ? <ValidationMessage colorCode='#363636' message={errorMessage}/> : ''}\n                    <Button onClick={this.handleMovieSearchButton} disabled={isMovieListLoading}>Search</Button>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getMovieSearchStart: (searchWords) => dispatch(getMovieSearchStart(searchWords))\n    }\n}\n\nconst mapStateToProps = createStructuredSelector({\n    errorMessage: selectMovieErrorMessage,\n    isMovieListLoading: selectIsMovieListLoading\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PublicMovieSearchBar);","import React from 'react';\nimport {\n    CircularProgressbarWithChildren,\n    buildStyles\n  } from \"react-circular-progressbar\";\nimport './top3MovieReviews.styles.scss';\n\nclass Top3MovieReviews extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            imdbRating: 0,\n            audienceRating: 0\n        }\n        this.calculateImdbRating = this.calculateImdbRating.bind(this);\n        this.calculateAudienceRating = this.calculateAudienceRating.bind(this);\n        this.calculateAudienceReviewLength = this.calculateAudienceReviewLength.bind(this);\n        this.calculatePluralTense = this.calculatePluralTense.bind(this);\n        this.determineRatingImage = this.determineRatingImage.bind(this);\n        this.timer = this.timer.bind(this)\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.timer()\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        clearTimeout(this.timer)\n    }\n\n    timer() {\n        const {imdbRating} = this.props;\n        const audienceScore = this.calculateAudienceRating()\n        setTimeout(() => {\n            (this.mounted &&  \n                this.setState({imdbRating: (parseFloat(imdbRating)/10 * 100).toFixed(0),\n                    audienceRating: audienceScore\n                }))   \n        }, 0)\n    }\n\n    calculateImdbRating() {\n        const {imdbRating} = this.props;\n        return (parseFloat(imdbRating)/10 * 100).toFixed(0);       \n    }\n\n    calculateAudienceRating() {\n        const {averagefanscore } = this.props;\n        if(averagefanscore) {\n            const percentageScore = (parseFloat(averagefanscore)/5 * 100).toFixed(0);\n            return percentageScore;\n        } \n        return 0;  \n    }\n\n    calculateAudienceReviewLength() {\n        const {fanreviews } = this.props\n        if(fanreviews.length === 1) {\n            return `${fanreviews.length}`\n        } \n        return `${fanreviews.length}`\n    }\n\n    calculatePluralTense() {\n        const { fanreviews } = this.props;\n        if(fanreviews.length === 1) {\n            return `Fan Review`\n        } \n        return `Fan Reviews`\n    }\n\n    determineRatingImage() {\n        const {averagefanscore} = this.props;\n        let imgSrc;\n        if(averagefanscore) {\n            const score = (parseFloat(averagefanscore)/5 * 100).toFixed(0)\n            if(score > 0 && score < 70) {\n                // https://www.flaticon.com/free-icon/dislike_1301458\n                // Freepik\n                imgSrc = 'https://www.flaticon.com/svg/static/icons/svg/1301/1301458.svg';\n            } else if (score == 0){\n                imgSrc= 'https://www.flaticon.com/svg/static/icons/svg/942/942751.svg'\n            } else if (score >= 70 && score < 90) {\n                // https://www.flaticon.com/free-icon/like_1301447?term=like%201301447&page=1&position=1\n                // Freepik\n                imgSrc = 'https://www.flaticon.com/svg/static/icons/svg/1301/1301447.svg'\n            } else if (score >= 90) {\n                // https://www.flaticon.com/free-icon/star_616655?term=star&page=1&position=15\n                // Freepik\n                imgSrc = 'https://www.flaticon.com/svg/static/icons/svg/616/616655.svg'\n            } \n            return imgSrc\n        }\n        // https://www.flaticon.com/free-icon/conversation_942751?term=942751&page=1&position=1\n        // Freepik\n        imgSrc= 'https://www.flaticon.com/svg/static/icons/svg/942/942751.svg'\n        return imgSrc\n    }\n\n    render() {\n        const {imdbVotes, Poster, fanreviews} = this.props;\n        return (\n            <div className='Top3MovieReviews'>\n                <div className='row justify-content-center align-items-center'>\n                    <div className='col-6'>\n                        <div className='Movie-Img d-flex flex-column align-items-center'>\n                            <img src={Poster} alt=\"movie\" width='120'/>\n                        </div>\n                    </div>\n                    <div className='col-6'>\n                        <div className='d-flex flex-column'>\n                            <div className='Critic d-flex flex-column justify-content-center align-items-center'>\n                                <div className='rating'>\n                                    <div style={{width: '80px', height: '80px'}}>\n                                        <CircularProgressbarWithChildren \n                                            value={this.state.imdbRating}\n                                            strokeWidth= {11}\n                                            styles={buildStyles({\n                                                rotation: 0,\n                                                strokeLinecap: 'round',\n                                                pathTransitionDuration: 1,\n                                                pathColor: `rgba(240,138,93, ${this.state.imdbRating / 100})`,\n                                                textColor: '#f88',\n                                                trailColor: '#d6d6d6',\n                                                backgroundColor: '#3e98c7',\n                                            })}\n                                        >\n                                            {/* https://www.flaticon.com/free-icon/imdb_889118?term=imdb&page=1&position=3 */}\n                                            {/* Pixel Perfect */}\n                                            <img style={{ width: 45, marginTop: -7}} src='https://www.flaticon.com/svg/static/icons/svg/889/889118.svg' alt=\"rating\" />\n                                            <div style={{ fontSize: 13, marginTop: -10 }}>\n                                                {this.state.imdbRating}%\n                                            </div>\n                                        </CircularProgressbarWithChildren>\n                                    </div>\n                                </div>\n                                {/* <div className='label'><span className='text-bold'>{imdbVotes}</span>&nbsp;Votes</div> */}\n                            </div>\n                            <div className='Audience d-flex flex-column justify-content-center align-items-center mt-2'>\n                                <div className='rating'>   \n                                    <div style={{width: '80px', height: '80px'}}>\n                                        <CircularProgressbarWithChildren \n                                            value={this.state.audienceRating}\n                                            strokeWidth= {11}\n                                            styles={buildStyles({\n                                                rotation: 0,\n                                                strokeLinecap: 'round',\n                                                pathTransitionDuration: 1,\n                                                pathColor: `rgba(62, 152, 199, ${this.calculateAudienceRating() / 100})`,\n                                                textColor: '#f88',\n                                                trailColor: '#d6d6d6',\n                                                backgroundColor: '#3e98c7',\n                                            })}\n                                        >\n                                            <img style={{ width: 35, marginTop: 0}} src={`${this.determineRatingImage()}`} alt=\"rating\" />\n                                            <div className='percent' style={{ fontSize: 13, marginTop: 0 }}>\n                                                {this.calculateAudienceRating() == 0 ? '' : this.calculateAudienceRating() + '%'}\n                                            </div> \n                                        </CircularProgressbarWithChildren>\n                                    </div>\n                                </div>\n                                {/* <div className='label'>\n                                    {fanreviews.length>0 ? <div><span className='text-bold-audience'>{this.calculateAudienceReviewLength() } </span> {this.calculatePluralTense()}</div>: 'No Reviews'}    \n                                </div> */}\n                            </div>\n                        </div>\n                    </div> \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Top3MovieReviews;","import React from 'react';\nimport './publicHome.styles.scss';\nimport { loginUserStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCurrentUser } from '../../redux/user/user.selectors';\nimport { selectMovieList, selectIsMovieListLoading, selectTopBanner } from '../../redux/movie/movie.selectors';\nimport PublicMovieSearchBar from '../../components/publicMovieSearchBar/publicMovieSearchBar.component';\nimport MovieListContainer from '../../components/movieList/movieList.container';\nimport { resetMovieSearch, getFavoriteMovieReviewsStart } from '../../redux/movie/movie.actions';\nimport Top3Banner from '../../components/top3Banner/top3Banner.component';\n\nclass PublicHome extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        const {resetMovieSearch} = this.props;\n        window.sessionStorage.removeItem(\"token\");\n        resetMovieSearch();\n        const {getFavoriteMovieReviewsStart} = this.props;\n        getFavoriteMovieReviewsStart();\n    }\n\n    render() {\n        return (\n            <div className='PublicHome'>\n                {/* <Top3Banner {...this.props} /> */}\n                <div className='container'>\n   \n                    <div className='row justify-content-center'>\n                        <div className='col-lg-5'>\n                            <PublicMovieSearchBar />\n                        </div>\n                    </div>\n                    <div className='row justify-content-center'>\n                        <div className='col-lg-9'>\n                            <MovieListContainer {...this.props} color='dark' privateRoute={false}/>\n                        </div>\n                    </div>\n                </div>              \n            </div>\n        )\n    }  \n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      loginUserStart: (credentials) => dispatch(loginUserStart(credentials)),\n      resetMovieSearch: () =>  dispatch(resetMovieSearch()),\n      getFavoriteMovieReviewsStart: () =>  dispatch(getFavoriteMovieReviewsStart())\n    }\n}\n\nconst mapStateToProps = createStructuredSelector({\n    currentUser: selectCurrentUser,\n    movieList: selectMovieList,\n    isMovieListLoading: selectIsMovieListLoading,\n    top3: selectTopBanner\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PublicHome);","import React from 'react';\nimport './top3Banner.styles.scss';\nimport Top3MovieReviews from '../top3MovieReviews/top3MovieReviews.component';\nimport AccessPrivatePageModal from '../accessPrivatePageModal/accessPrivatePageModal.component';\n\nclass Top3Banner extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    componentDidMount() {\n        const {getFavoriteMovieReviewsStart} = this.props;\n        getFavoriteMovieReviewsStart();\n    }\n\n    render(){\n        const {top3} = this.props;\n        return(\n            <div className='Top3Banner'>             \n                <div className='row justify-content-center align-items-center'>\n                    <div className='col-lg-2 col-md-12 text-center'>\n                        <h2 className='text-center'>POPULAR MOVIES</h2>\n                        <AccessPrivatePageModal label='Write A Movie Review!' {...this.props} />\n                    </div>\n                    {top3.map(movieData => {\n                        return  <div className='col-md-12 col-lg-3' key={movieData.imdbID}>\n                            <Top3MovieReviews {...movieData} key={movieData.imdbID}/>\n                        </div>\n                    })}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Top3Banner;","import React from 'react';\nimport { Spinner } from 'reactstrap';\nimport './withSpinner.styles.scss';\n\nconst WithSpinner = (WrappedComponent, height) => {\n    const componentWithSpinner = ({isLoading, ...props}) => {\n        const {color} = props;\n        return isLoading ? (\n            <div className='PageWithSpinner' style={{height: height}}>\n                <Spinner style={{ width: '5rem', height: '5rem' }} color={color} />\n            </div>\n        ) : (\n            <WrappedComponent {...props}/>\n        )\n    }\n    return componentWithSpinner;\n}\n\nexport default WithSpinner;","import React from 'react';\nimport { FormGroup, Label, Input } from 'reactstrap';\n\nconst FormInput = ({id, label, name, type, placeholder, onChange, value, onKeyPress}) => {\n    return (\n        <div className='FormInput'>\n            <FormGroup>\n                <Label for={id}>{label}</Label>\n                <Input type={type} name={name} id={id} placeholder={placeholder} onChange={onChange} value={value} onKeyPress={onKeyPress}/>\n            </FormGroup>\n        </div>\n    )\n}\n\nexport default FormInput;","import React from 'react';\nimport './validationMessage.styles.scss';\n\nconst ValidationMessage = ({...props}) => {\n    const {colorCode, message} = props;\n    return (\n        <div className='ValidationMessage'>\n            {/* https://www.flaticon.com/free-icon/warning_1199619 */}\n            {/* Freepik */}\n            <img src=\"https://www.flaticon.com/svg/static/icons/svg/1199/1199619.svg\" alt=\"warning\"/>\n            <p style={{color: `${colorCode}`}}>{message}</p>\n        </div>\n    )\n}\n\nexport default ValidationMessage;","import React from 'react';\nimport './accessPrivatePageModal.styles.scss';\nimport { Button, Modal, ModalHeader, ModalBody} from 'reactstrap';\nimport {withRouter} from 'react-router-dom';\n\nclass AccessPrivatePageModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal: false,\n        }\n        this.toggle = this.toggle.bind(this);\n        this.handleRegister = this.handleRegister.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.handleLoginGuest = this.handleLoginGuest.bind(this);\n    }\n\n    toggle() {\n        this.setState((currState) =>{\n            return {\n                modal: !currState.modal\n            }\n        })\n    }\n\n    handleRegister() {\n        const {history} = this.props;\n        history.push('/register');\n        this.toggle();\n    }\n\n    handleLogin() {\n        const {history} = this.props;\n        history.push('/login');\n        this.toggle();\n    }\n\n    handleLoginGuest() {\n        const {history} = this.props;\n        history.push('/login');\n        this.toggle();\n    }\n\n    render() {\n        const {label, history} = this.props;\n        return(\n            <div >\n                <Button onClick={this.toggle}> {label} </Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} >\n                    <ModalHeader toggle={this.toggle}>FilmCritic App</ModalHeader>\n                    <ModalBody>\n                     <div className='AccessPrivatePageModal'>\n                         <div className='details'>  \n                             <p> Login or Register to Write A Movie Review!</p>\n                         </div>\n                         <div>\n                            <div  className='options'>\n                            <button className='btn btn-sm btn-warning' onClick={this.handleRegister}>Register</button> Create New Account \n                            </div>\n                            <div  className='options'>\n                                <button className='btn btn-sm btn-warning' onClick={this.handleLogin}>Login</button> Have Existing Account \n                            </div>        \n                            <div  className='options'>\n                                <button className='btn btn-sm btn-info' onClick={this.handleLoginGuest}>Guest</button>Login as Guest\n                            </div>       \n                         </div>\n                     </div>\n                    </ModalBody>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(AccessPrivatePageModal);","import React from 'react';\nimport './privateMovie.styles.scss';\nimport { Button } from 'reactstrap';\nimport {withRouter} from 'react-router-dom';\n\nclass PrivateMovie extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            audienceRating: ''\n        }\n        this.calculateImdbRating = this.calculateImdbRating.bind(this)\n        this.calculateAudienceRating = this.calculateAudienceRating.bind(this)\n        this.determineRatingImage = this.determineRatingImage.bind(this)\n        this.determineIfPlural = this.determineIfPlural.bind(this)\n        this.determineAudienceRatingText = this.determineAudienceRatingText.bind(this)\n        this.determinePoster = this.determinePoster.bind(this)\n        this.displayProperTitleLength = this.displayProperTitleLength.bind(this)\n    }\n\n    calculateImdbRating() {\n        const {imdbRating} = this.props;\n        return `${(parseFloat(imdbRating)/10 * 100).toFixed(0)}%`\n    }\n\n    calculateAudienceRating() {\n        const {averagefanscore} = this.props;\n        if(averagefanscore) {\n            if(parseFloat(averagefanscore) === 0) {\n                return ''\n            }\n            return `${(parseFloat(averagefanscore)/5 * 100).toFixed(0)}%`\n        } \n        return ''\n    }\n\n    determineRatingImage() {\n        const {averagefanscore} = this.props;\n        const score = (parseFloat(averagefanscore)/5 * 100).toFixed(0)\n        let imgSrc;\n        if(score > 0 && score < 70) {\n            // https://www.flaticon.com/free-icon/dislike_1301458\n            // Freepik\n            imgSrc = 'https://www.flaticon.com/svg/static/icons/svg/1301/1301458.svg';\n        } else if (score >= 70 && score < 90) {\n             // https://www.flaticon.com/free-icon/like_1301447?term=like%201301447&page=1&position=1\n            // Freepik\n            imgSrc = 'https://www.flaticon.com/svg/static/icons/svg/1301/1301447.svg'\n        } else if (score >= 90) {\n             // https://www.flaticon.com/free-icon/star_616655?term=star&page=1&position=15\n            // Freepik\n            imgSrc = 'https://www.flaticon.com/svg/static/icons/svg/616/616655.svg'\n        } else  {\n             // https://www.flaticon.com/free-icon/conversation_942751?term=942751&page=1&position=1\n            // Freepik\n            imgSrc= 'https://www.flaticon.com/svg/static/icons/svg/942/942751.svg'\n        }\n        return <img src={imgSrc} alt=\"audience-icon\" width='70px'/> \n    }\n\n    determineIfPlural() {\n        const {fanreviews} = this.props;\n        if(fanreviews.length === 1) {\n            return 'Review'\n        }\n        return 'Reviews'\n    }\n\n    determineAudienceRatingText() {\n        const {fanreviews} = this.props;\n        if(fanreviews) {\n            if(fanreviews.length === 0) {\n                return 'Be First to Review!'\n            }\n            return `${fanreviews.length} Fan ${this.determineIfPlural()}`\n        }\n        return 'Be First to Review!'\n    }\n\n    determinePoster() {\n        const {Poster, Title} = this.props;\n        if(Poster === 'N/A') {\n            // Freepik\n            return  <img src='https://www.flaticon.com/svg/static/icons/svg/20/20773.svg' alt={Title} width='100px' height='100px' style={{backgroundColor: '#84a9ac', padding: '0 30px'}}/>\n        }\n        return  <img src={Poster} alt={Title} width='220px' height='280px'/>\n    }\n\n    displayProperTitleLength() {\n        const {Title} = this.props;\n        if(Title.length > 40) {\n            return Title.slice(0, 40) + '...'\n        }\n        return Title;\n    }\n\n    render() {\n        const { Actors, Released, imdbVotes, imdbID, fanreviews, history} = this.props;\n        return (\n            <div className='PrivateMovie'>\n                <div className='main-section'>\n                    <div className='img'>\n                        {this.determinePoster()}\n                    </div>\n                    <div className='details'>\n                        <div className='top'>\n                            <div className='d-flex justify-content-between align-items-center'>\n                                <div>\n                                <h3>{this.displayProperTitleLength()}</h3>\n                                </div>\n                                {/* <div  className='view-more'>\n                                    <Button onClick={() => history.push(`/movies/${imdbID}/reviews`)} color='warning'>More!</Button>\n                                </div> */}\n                            </div>\n                            <p><span className='text-bold'>Released:</span>  {Released}</p>\n                            <p><span className='text-bold'>Actors:</span>  {Actors}</p>\n                            <div  className='view-more'>\n                                    <Button onClick={() => history.push(`/movies/${imdbID}/reviews`)} color='warning'>Click for More!</Button>\n                                </div>\n                        </div>\n                        <div className='ratings'>\n                            <div className='imdb-review'>\n                                <div className='critic-score'>\n                                    <img src=\"https://www.flaticon.com/svg/static/icons/svg/889/889118.svg\" alt=\"imdb-icon\" width='75px' />\n                                    <p>{this.calculateImdbRating()}</p>\n                                </div>\n                                <div className='total'>\n                                    {imdbVotes ?    imdbVotes + ` Critic Votes` : ''}\n                                </div>\n                            </div>\n                            <div className='fan-review'>\n                                <div className='fan-score'>\n                                    {this.determineRatingImage()}\n                                    <p>  {this.calculateAudienceRating()}</p>\n                                </div>\n                                <div className='total'>\n                                    {this.determineAudienceRatingText()}\n                                </div>\n                            </div>     \n                        </div>\n                    </div>   \n                </div>    \n            </div>\n        )\n    }   \n}\n\nexport default withRouter(PrivateMovie);","import React from 'react';\nimport './movie.styles.scss';\nimport AccessPrivatePageModal from '../accessPrivatePageModal/accessPrivatePageModal.component';\n\nclass Movie extends React.Component {\n    constructor(props) {\n        super(props)\n        this.determinePoster = this.determinePoster.bind(this)\n        this.displayProperTitleLength = this.displayProperTitleLength.bind(this)\n    }\n\n    determinePoster() {\n        const {Poster, Title} = this.props;\n        if(Poster === 'N/A') {\n            // Freepik\n            return  <img src='https://www.flaticon.com/svg/static/icons/svg/20/20773.svg' alt={Title} width='100px' height='100px' style={{backgroundColor: '#84a9ac', padding: '0 30px'}}/>\n        }\n        return  <img src={Poster} alt={Title} width='200px' height='250px'/>\n    }\n\n    displayProperTitleLength() {\n        const {Title} = this.props;\n        if(Title.length > 65) {\n            return Title.slice(0, 65) + '...'\n        }\n        return Title;\n    }\n\n    render() {\n        const {Plot} = this.props;\n        return (\n            <div className='Movie'>\n                <div className='img'>\n                    {this.determinePoster()}\n                </div>\n                <div className='details'>\n                    <h4>{this.displayProperTitleLength()}</h4>\n                    <p> {Plot}</p>\n                    <div className='public-route text-right'>\n                        <AccessPrivatePageModal label='Write A Movie Review!' {...this.props}/>\n                    </div>  \n                </div>    \n            </div>\n        )\n    }\n}\n\nexport default Movie;","import React from 'react';\nimport './movieList.styles.scss';\nimport PrivateMovie from '../privateMovie/privateMovie.component.';\nimport Movie from '../movie/movie.component';\n\nconst MovieList = ({...props}) => {\n    const {movieList, privateRoute} = props;\n    return(\n        <div className='MovieList'>\n            {movieList.map(movie => {\n                return  privateRoute ? <PrivateMovie {...movie} key={movie.imdbID} {...props}/> : <Movie {...movie} key={movie.imdbID} {...props}/> \n            })}\n        </div>\n    )\n}\n\nexport default MovieList;","import { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsMovieListLoading} from '../../redux/movie/movie.selectors'\nimport MovieList from './movieList.component';\nimport WithSpinner from '../withSpinner/withSpinner.component';\n\nconst mapStateToProps = createStructuredSelector({\n    isLoading: selectIsMovieListLoading\n})\n\nconst MovieListContainer = connect(mapStateToProps)(WithSpinner(MovieList, '200px'))\n\nexport default MovieListContainer;"],"sourceRoot":""}